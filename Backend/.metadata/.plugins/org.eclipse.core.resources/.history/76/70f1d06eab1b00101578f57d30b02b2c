package com.backend.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;

import com.backend.entity.User;
import com.backend.repo.UserRepository;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    public User addUser(User user) {
        if (userRepository.existsByEmail(user.getEmail())) {
            throw new RuntimeException("Email already exists!");
        }
        return userRepository.save(user);
    }
    public User login(String email, String rawPassword) {
        User user = userRepository.findByEmail(email);
        if (user != null && rawPassword.equals(user.getPassword())) {
            return user;
        }
        throw new RuntimeException("Invalid email or password");
    }
    
    public User getUserByEmail(String email) {
        return userRepository.findByEmail(email);
    }
    
    public User updateUser(User updatedUser) {
        User existingUser = userRepository.findByEmail(updatedUser.getEmail())
                .orElseThrow(() -> new RuntimeException("User not found with email: " + updatedUser.getEmail()));

        existingUser.setName(updatedUser.getName());
        existingUser.setPhone(updatedUser.getPhone());
        // Update other fields as necessary (except email/password if you want to protect them)

        return userRepository.save(existingUser);
    }
   
}
